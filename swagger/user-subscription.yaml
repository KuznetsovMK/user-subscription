openapi: 3.0.3
info:
  title: User subscription API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: 'http://user-subscription/api'
paths:
  /user/find-all:
    get:
      operationId: findAllUsers
      summary: Returns a list of users.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{id}:
    get:
      operationId: findUserById
      summary: Returns info about user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: a3e41663-159f-4af1-bf0b-0f50e25572e8
      responses:
        '200':
          description: OK (successful operation)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /user/create:
    post:
      operationId: createUser
      summary: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: CREATED
        '400':
          description: Incorrect input
        '404':
          description: User not found
  /user/update/{id}:
    put:
      operationId: updateUser
      summary: Update user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: a3e41663-159f-4af1-bf0b-0f50e25572e8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '204':
          description: NO_CONTENT
        '400':
          description: Incorrect input
        '404':
          description: User not found
  /user/delete/{id}:
    delete:
      operationId: deleteUser
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: a3e41663-159f-4af1-bf0b-0f50e25572e8
      responses:
        '204':
          description: NO_CONTENT
        '400':
          description: Incorrect input
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      required:
        - id
        - fullName
      properties:
        id:
          type: string
          format: uuid
          example: ef88e14a-3422-48b3-aad7-095617d90c8d
        fullName:
          type: string
          example: Соколов Даниил Егорович
    UserRequest:
      type: object
      required:
        - fullName
      properties:
        fullName:
          type: string
          example: "Степанов Платон Маркович"